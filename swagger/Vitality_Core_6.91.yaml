swagger: '2.0'
info:
  x-swagger-file-version: '6.91'
  version: v6.91
  title: Vitality Core
  description: >

    This API provides access to core Vitality functionality

    ## Resources
     
    <table class="table table-striped table-bordered table-hover
    table-condensed">
     <thead>
      <tr>
        <th style="background-color: red;color:white">Resource</th>
        <th style="background-color: red;color:white">Description</th>
      </tr>
    </thead> <tbody> <tr> <td>Assessments</td> <td> <ul> <li>Submission of
    assessments <ul> <li>online: general/mentalwellbeing/nutrition/fitness'</li>
    <li>offline: screenings</li> </ul> </li> <li>Retrieval of assessment
    feedback</li> <li>Retrieval of assessment metadata, e.g effective period,
    type</li> </ul> </td> </tr> <tr> <td>Challenges</td> <td> <ul>
    <li>Management of challenges (Group and Community)</li> <li>Retrieval of
    challenge history</li> <li>Retireval of weekly challenges</li>
    <li>Assessment-triggered challenges</li> <li>Workout tracker</li> </ul>
    </td> </tr> <tr> <td>Devices</td> <td> <ul> <li>Retrieval of device
    activities</li> <li>Linking and delinking of devices for a member</li> </ul>
    </td> </tr> <tr> <td>Fitness Events</td> <td><ul><li>Participation on
    fitness events</li></ul></td> </tr> <tr> <td>Friends</td> <td> <ul>
    <li>Friend search</li> <li>Management of friend invitations (accept, reject,
    send)</li> <li>Management of friend groups</li> </ul> </td> </tr> <tr>
    <td>Memberships</td> <td> <ul> <li>Retrieval of membership details including
    demographics and financial details</li> <li>Retrieval of system-defined
    membership status thresholds</li> <li>Retireval of supported device list for
    a market</li> </ul> </td> </tr> <tr> <td>Notifications</td>
    <td><ul><li>Retrieval of member notifications</li></ul></td> </tr> <tr>
    <td>Partners</td> <td><ul><li>Retrieval of details on reward
    partners</li></ul></td> </tr> <tr> <td>Points</td> <td><ul><li>Retrieval of
    point information for a member including history and summary</li></ul></td>
    </tr> <tr> <td>Rewards</td> <td><ul><li>Reward Redemption</li></ul></td>
    </tr> </tbody> </table>
      
    ## Membership Identification
      * Operations which return member-specific data require the Vitality membership number to be specified in the "membership-no" input paramter 
      
      * Certain operations also support Vitliaty Active (VA) members and for those cases the VA membership number is epxected to be specified in the member-id input parameter

    ## More Information on Vitality 

    Please refer to this
    [link](https://www.aia.com/en/about-aia/aia-vitality.html) for more details
    about Vitality 
host: vitality.aia.com
basePath: /vitality/core/v1
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
parameters:
  X-AIA-Request-Id:
    in: header
    name: X-AIA-Request-Id
    description: A unique id generated for each request for tracking purposes
    required: true
    type: string
  X-Vitality-Legal-Entity-Id:
    in: header
    name: X-Vitality-Legal-Entity-Id
    description: Attribute used to identify local market
    required: true
    type: string
  AIA-Access-Token:
    in: header
    name: Authorization
    description: >-
      An access token issued by an AIA Authorization server. This will have the
      format Bearer + {space} + {accessToken}. Example: Bearer
      KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ==
    required: true
    type: string
  PaginationLimit:
    in: query
    name: page-limit
    description: >-
      This parameter indicates the maximum number of items to return. If this
      parameter is not specified, all records are returned starting from the
      position specified by the offset parameter
    required: false
    type: string
  PaginationOffset:
    in: query
    name: page-offset
    description: >-
      This parameter indicates the starting position of the query in relation to
      the complete set of unpaginated items. Offset = 0 means starting from
      first record in the set. If this parameter is not specified, the default
      value is 0
    required: false
    type: string
  MembershipNo:
    in: query
    name: membership-no
    description: Vitality membership number
    required: false
    type: string
responses:
  HTTPError400:
    description: Bad Request
    schema:
      $ref: '#/definitions/Exception'
  HTTPError401:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Exception'
  HTTPError405:
    description: Method Not Allowed
    schema:
      $ref: '#/definitions/Exception'
  HTTPError406:
    description: Not Acceptable
    schema:
      $ref: '#/definitions/Exception'
  HTTPError500:
    description: >-
      Internal Server Error

      <table class="table table-striped table-bordered"> <thead> <tr>
      <th>ReasonCode</th> <th>Reason</th> <th>Message</th> </tr> </thead>
      <tbody> <tr> <td>502</td> <td>Bad Gateway</td> <td>Service is down or
      being upgraded</td> </tr> <tr> <td>503</td> <td>Service Unavailable</td>
      <td>Service is up, but overloaded with requests</td> </tr> <tr>
      <td>504</td> <td>Gateway Timeout</td> <td>Servers are up, but the
      request   couldnâ€™t be serviced due to some failure within our stack</td>
      </tr> </tbody> </table>
    schema:
      $ref: '#/definitions/Exception'
paths:
  /assessments/configuration:
    get:
      tags:
        - Assessments
      summary: Retrieves assessment configuration details for a business entity.
      description: >-
        Provides a list of all available assessments for members within a
        business entity
      operationId: assessmentConfiguration
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AssessmentConfigResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /assessments/details:
    get:
      tags:
        - Assessments
      summary: Retrieves all member assessments.
      description: >-
        Provides all member assessments - online
        (general/mentalwellbeing/nutrition/fitness) and offline assessments
        (screenings) based on membership number
      operationId: memberAssessments
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberAssessmentResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /assessments/feedback:
    get:
      tags:
        - Assessments
      summary: Retrieves feedback for member assessments.
      description: 'Provides feedback for member assessments, based on membership number'
      operationId: generalAssessmentGet
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: assessment-type
          description: Vitality assessment type for specific selection
          required: false
          type: string
          enum:
            - general
            - mental
            - fitness
            - nutrition
            - screenings
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AssessmentFeedbackResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /assessments/fitness:
    post:
      tags:
        - Assessments
      summary: Sends online fitness assessment for processing.
      description: >-
        Enables online fitness assessment submission by member, based on
        membership number
      operationId: fitnessAssessmentPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: role
          description: Vitality role of the member
          required: false
          type: string
        - in: body
          name: body
          description: VHR general assessment object data.
          required: true
          schema:
            $ref: '#/definitions/FitnessAssessmentRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AssessmentFeedbackResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /assessments/general:
    post:
      tags:
        - Assessments
      summary: Sends online general assessment for processing.
      description: >-
        Enables online Vitality health review / general assessment submission by
        member, based on membership number
      operationId: generalAssessmentPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: role
          description: Vitality role of the member
          required: false
          type: string
        - in: body
          name: body
          description: VHR general assessment object data.
          required: true
          schema:
            $ref: '#/definitions/VHRGeneralAssessmentRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AssessmentFeedbackResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /assessments/mental:
    post:
      tags:
        - Assessments
      summary: Sends online mental assessment for processing.
      description: >-
        Enables online mental assessment submission by member, based on
        membership number
      operationId: mentalAssessmentPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: role
          description: Vitality role of the member
          required: false
          type: string
        - in: body
          name: body
          description: VHR general assessment object data.
          required: true
          schema:
            $ref: '#/definitions/MentalAssessmentRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AssessmentFeedbackResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /assessments/nutrition:
    post:
      tags:
        - Assessments
      summary: Sends online nutrition assessment for processing.
      description: >-
        Enables online nutrition assessment submission by member, based on
        membership number
      operationId: nutritionAssessmentPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: role
          description: Vitality role of the member
          required: false
          type: string
        - in: body
          name: body
          description: VHR general assessment object data.
          required: true
          schema:
            $ref: '#/definitions/NutritionAssessmentRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AssessmentFeedbackResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /assessments/screenings:
    post:
      tags:
        - Assessments
      summary: Sends screening assessment for processing.
      description: >-
        Enables members to upload their screening assessment details for
        processing
      operationId: screenings
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: body
          name: body
          description: Screening assessment object data.
          required: true
          schema:
            $ref: '#/definitions/ScreeningAssessmentRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /assessments/declaration:
    post:
      tags:
        - Assessments
      summary: Sends declaration for processing.
      description: >-
        Enables members to send declaration for processing
      operationId: declaration
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: body
          name: body
          description: Declaration object data.
          required: true
          schema:
            $ref: '#/definitions/DeclarationRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/community:
    get:
      tags:
        - Challenges
      summary: Retrieves community challenges available for everyone.
      description: >-
        Provides a list of all commnunity challenge available for a business
        entity
      operationId: communityChallengesOpen
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommunityChallengesResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Challenges
      summary: Sends an accetance or a quit request to community challenge.
      description: >-
        Enables a member to challenge a friend within community, based on friend
        id
      operationId: communityChallengesAcceptPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: challenge-id
          description: Challenge id for a member challenge.
          required: true
          type: string
        - in: query
          name: action
          description: Action for the community challenge.
          required: true
          type: string
          enum:
            - Accept
            - Quit
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/community/progress:
    post:
      tags:
        - Challenges
      summary: Retrieves community challenges available for everyone.
      description: >-
        Provides a list of all commnunity challenge available for a business
        entity
      operationId: communityChallengesProgress
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: challenge-id
          description: Challenge id for a member challenge.
          required: true
          type: string
        - in: query
          name: action
          description: Action for the community challenge.
          required: true
          type: string
          enum:
            - Achieved
            - Unachieved
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/community/member:
    get:
      tags:
        - Challenges
      summary: Retrieves members community challenges.
      description: >-
        Provides community challenge details for a member i.e. challenges sent
        to the member by any of the friends (not part of weekly or group)
      operationId: communityChallenges
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommunityChallengesMemberResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/community/invite:
    get:
      tags:
        - Challenges
      summary: Retrieves invitations for community challenges.
      description: >-
        Provides a list of all invitations for a member based on membership
        number
      operationId: communityChallengesInvite
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommunityChallengesInviteResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Challenges
      summary: Sends challenges to a friend.
      description: >-
        Enables a member to challenge a friend within community, based on friend
        id
      operationId: communityChallengesInvitePost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: body
          name: body
          description: Request data for community challenge invite.
          required: true
          schema:
            $ref: '#/definitions/CommunityChallengesInviteRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/challenges/community/invite/{invite-id}':
    delete:
      tags:
        - Challenges
      summary: Sends a rejection to a challenge.
      description: >-
        Enables a member to challenge a friend within community, based on friend
        id
      operationId: communityChallengesDecline
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: path
          name: invite-id
          description: Key to identify an invitation.
          required: true
          type: string
        - in: query
          name: challenge-id
          description: Challenge id for a member challenge.
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Challenges
      summary: Sends and acceptance to a challenge.
      description: >-
        Enables a member to challenge a friend within community, based on friend
        id
      operationId: communityChallengesAccept
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: path
          name: invite-id
          description: Key to identify an invitation.
          required: true
          type: string
        - in: query
          name: challenge-id
          description: Challenge id for a member challenge.
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/group:
    get:
      tags:
        - Challenges
      summary: Retrieves members group challenges.
      description: >-
        Provides group challenges, based on either member id or membership
        number
      operationId: memberGroupChallenges
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: Member id for non membership accounts
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberChallengeResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/history:
    get:
      tags:
        - Challenges
      summary: Retrieves member challenges history .
      description: >-
        Provides history for all member challenges, namely - risk, weekly, group
        and community,for given year(s) in past, based on either membership id
        or membership number
      operationId: ChallengesHistory
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: number-of-years
          description: Number of years in the past user wants to see the challenges detail
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberChallengeResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/risk:
    get:
      tags:
        - Challenges
      summary: Retrieves members health risk related challenges.
      description: >-
        Provides challenges triggered through assessments, based on membership
        number
      operationId: memberChallenges
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberChallengeResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Challenges
      summary: Sends an acceptance or a quit request to risk challenge.
      description: >-
        Enables a member to accept or quit a challenge, based on membership
        number
      operationId: riskChallengesAcceptPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: challenge-id
          description: Challenge id for a member risk challenge.
          required: true
          type: string
        - in: query
          name: action
          description: Action for the risk challenge.
          required: true
          type: string
          enum:
            - Accept
            - Quit
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/weekly:
    get:
      tags:
        - Challenges
      summary: Retrieves members weekly challenges.
      description: >-
        Provides weekly challenges, based on either member id or membership
        number
      operationId: memberWeeklyChallenges
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: Member id for non membership accounts
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberChallengeResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /challenges/workout-tracker:
    get:
      tags:
        - Challenges
      summary: Retrieves members workout details.
      description: 'Provides a list of workouts of the member, based on memebership number'
      operationId: workoutTracker
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: device-name
          description: Device name used by the user to record activity details.
          required: false
          type: string
        - in: query
          name: startDate
          description: Enable user to look up starting from this date.
          required: false
          type: string
        - in: query
          name: endDate
          description: Enable user to look up ending by this date.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WorkoutTrackerResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /devices:
    get:
      tags:
        - Devices
      summary: Retrieves devices list for a business entity.
      description: >-
        Provides list of physical activity tracking devices available for
        members in a business entity
      operationId: devicesList
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DevicesListResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/devices/{device-name}/activities':
    get:
      tags:
        - Devices
      summary: Retrieves physical activity details from device.
      description: Provides activity details for all devices based on a membership number
      operationId: deviceDetails
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: month
          description: ' Month in which user has performed the activity. Valid values: 1 - 12'
          required: true
          type: string
        - in: path
          name: device-name
          description: ' Device name used by the user to record activity details.'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceDetailsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/devices/{device-name}/link':
    post:
      tags:
        - Devices
      summary: Sends a reqeust to link a device.
      description: >-
        Enables a member to link a device to their membership for tracking
        physical activities
      operationId: deviceLink
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: path
          name: device-name
          description: Device to be linked.
          required: true
          type: string
        - in: query
          name: email
          description: Registered email of account linking.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceLinkResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    delete:
      tags:
        - Devices
      summary: Sends a reqeust to delink a device.
      description: Enables a member to delink a device from their membership account
      operationId: deviceDelink
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: path
          name: device-name
          description: Device to be delinked.
          required: true
          type: string
        - in: query
          name: email
          description: Registered email of account delinking.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceDelinkResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/devices/{device-name}/link/token':
    post:
      tags:
        - Devices
      summary: Sends a reqeust to link a garmin device by one-time token
      description: >-
        Enables a member to link a device to their membership for tracking
        physical activities
      operationId: deviceLinkToken
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: path
          name: device-name
          description: Device to be linked.
          required: true
          type: string
        - in: body
          name: body
          description: Garmin tokens and userId of a specific member.
          required: true
          schema:
            $ref: '#/definitions/LinkGarminTokenRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/devices/submit-health-data':
    post:
      tags:
        - Devices
      summary: Sends a reqeust to submit native health kit data by one-time token
      description: >-
        Enables a member to submit the tracking health data
      operationId: deviceSubmitHealthData
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: body
          name: body
          description: Device reading in json format.
          required: true
          schema:
            $ref: '#/definitions/SubmitHealthDataRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /fitness-events:
    post:
      tags:
        - Fitness Events
      summary: Sends organized fitness event participation for processing.
      description: >-
        Enables members to send their participation information on fitness
        events to Vitality system
      operationId: fitnessEventDetails
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: body
          name: body
          description: Activities object to post the the data.
          required: true
          schema:
            $ref: '#/definitions/ActivitiesRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /friends:
    get:
      tags:
        - Friends
      summary: Retrieve list of friends for a member.
      description: Provides list of all friends for a member based on membership number
      operationId: friendsList
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FriendsListResponse'
          headers:
            X-Total-Count:
              type: string
              description: Total number of records in the unpaginated set
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /friends/group:
    get:
      tags:
        - Friends
      summary: Retrieves members owned group.
      description: >-
        Provides a group owned by member, based on either  membership number or
        member id
      operationId: groupsList
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupListResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    put:
      tags:
        - Friends
      summary: Sends a request for editing a group.
      description: >-
        Enables a member to edit a group name and add or remove friend(s) from
        group
      operationId: editGroup
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: query
          name: group-name
          description: Group name for friends.
          required: true
          type: string
        - in: body
          name: body
          description: List of friends to be added or deleted.
          required: true
          schema:
            $ref: '#/definitions/GroupEditRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    delete:
      tags:
        - Friends
      summary: Sends a request to delete a group.
      description: Enables member to delete their group.
      operationId: deleteGroup
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
        - in: path
          name: group-id
          description: Group id of the friends
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Friends
      summary: Sends a request for group creation.
      description: Enables a member to create a group
      operationId: createGroup
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
        - in: query
          name: group-name
          description: Group name for  friends.
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /friends/group/pending-list:
    get:
      tags:
        - Friends
      summary: Retrieves a list of pending group request from friends.
      description: >-
        Provides a list of members pending group requests sent by friends
      operationId: pendingGroupGet
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PendingGroupResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /friends/pending-list:
    get:
      tags:
        - Friends
      summary: Retrieves a list of pending friends.
      description: >-
        Provides a list of members pending friend requests send to friends and
        sent by friends
      operationId: pendingFriendsGet
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PendingFriendsResponse'
          headers:
            X-Total-Count:
              type: string
              description: Total number of records in the unpaginated set
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Friends
      summary: Sends an acceptance or rejection to a friend request.
      description: Enables a member to accept or reject a friend request
      operationId: pendingFriendsPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
        - in: query
          name: friend-id
          description: User id of the friend member.
          required: true
          type: string
        - in: query
          name: action
          description: User id of the friend member.
          required: true
          type: string
          enum:
            - accept
            - reject
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /friends/search:
    get:
      tags:
        - Friends
      summary: Retrieves members based on wildcard search.
      description: >-
        Provides members details based on partial e-mail id or name ; typically
        used for searching members to befriend
      operationId: friendFinder
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: query
          name: search-key
          description: >-
            Key used to search a friend either by email or name. Wildcard is
            supported
          required: true
          type: string
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
        - $ref: '#/parameters/MembershipNo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FriendFinderResponse'
          headers:
            X-Total-Count:
              type: string
              description: Total number of records in the unpaginated set
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/friends/{friend-id}':
    get:
      tags:
        - Friends
      summary: Retrieves details of a friend.
      description: >-
        Provides details of a members friend based on membership number or
        member id of the member and friends user id
      operationId: friendDetails
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
        - in: path
          name: friend-id
          description: User id of the friend member.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FriendDetailsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Friends
      summary: Sends a friend request for member within a business entity.
      description: >-
        Enables a member to send a friend request to another vitality member
        within a business entity, based on membership number or member id of the
        member and friends user id
      operationId: addFriend
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
        - in: path
          name: friend-id
          description: User id of the friend.
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    delete:
      tags:
        - Friends
      summary: Sends an unfriend request.
      description: >-
        Enables a member to remove a friend from their friends list, based on
        membership number or member id of the member and friends user id
      operationId: deleteFriend
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
        - in: path
          name: friend-id
          description: User id of the friend member.
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/friends/{friend-id}/interact':
    post:
      tags:
        - Friends
      summary: Sends an interaction request to a friend.
      description: >-
        Enables a member to send an interact request namely - poke, clap and
        like
      operationId: friendsInteraction
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: member-id
          description: member id for vitality active only members.
          required: false
          type: string
        - in: path
          name: friend-id
          description: Friend identifier.
          required: true
          type: string
        - in: query
          name: action
          description: Types of action to interact with friend
          enum:
            - poke
            - clap
            - like
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/memberships/financials/bank-list':
    get:
      tags:
        - Memberships
      summary: Retrieve bank list within a business entity,
      description: >-
        Provides list of bank available for members in a business entity
        number.
      operationId: memberFinancialsBankList
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: bank-id
          description: Id of bank member is looking up.
          required: false
          type: string
        - in: query
          name: overseas
          description: Boolean (Y/N) whether it is a overseas bank.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberBankListResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /memberships/status-thresholds:
    get:
      tags:
        - Memberships
      summary: Retrieve threshold definitions for Vitality status.
      description: Provides threshold limits defined for Vitality membership status
      operationId: statusThresholds
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VitalityThresholdResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/memberships/{membership-no}':
    get:
      tags:
        - Memberships
      summary: Retrieve membership details.
      description: Provides Vitality membership details based membership number
      operationId: membershipDetails
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Vitality membership number or member id (vitality active cases)
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MembershipDetailsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/memberships/{membership-no}/demographics':
    get:
      tags:
        - Memberships
      summary: Retrieve members contact details.
      description: >-
        Provides members demographic details based on membership number and
        document id
      operationId: memberDemographics
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Vitality membership number  or member id (vitality active cases)
          required: true
          type: string
        - in: query
          name: doc-id
          description: Unique identifier of the document e.g. passport number etc.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MembersDemographicsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Memberships
      summary: Sends a update contact details request.
      description: >-
        Enable member to update demographic details based on membership number and
        document id
      operationId: memberDemographicsUpdate
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Vitality membership number  or member id (vitality active cases)
          required: true
          type: string
        - in: query
          name: doc-id
          description: Unique identifier of the document e.g. passport number etc.
          required: false
          type: string
        - in: body
          name: body
          description: Updated contact details of the user
          required: true
          schema:
            $ref: '#/definitions/MemberDemographicsUpdateRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/memberships/{membership-no}/devices':
    get:
      tags:
        - Memberships
      summary: Retrieves devices list for a membership.
      description: >-
        Provides list of physical activity tracking devices linked for a specific member
      operationId: memberDevicesList
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Membership number of the user  or member id (vitality active cases).
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DevicesListResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/memberships/{membership-no}/financials':
    get:
      tags:
        - Memberships
      summary: Retrieve members financial details.
      description: >-
        Provides list of financial details of the user based on membership
        number.
      operationId: memberFinancials
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Membership number of the user  or member id (vitality active cases).
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberFinancialsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Memberships
      summary: Sends a update financial details request.
      description: >-
        Enable member to update financial details based on membership number.
      operationId: memberFinancialsUpdate
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Membership number of the user  or member id (vitality active cases).
          required: true
          type: string
        - in: body
          name: body
          description: Updated financial details of the user
          required: true
          schema:
            $ref: '#/definitions/MemberFinancialsUpdateRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'

  '/memberships/{membership-no}/profile-image':
    get:
      tags:
        - Memberships
      summary: Retrieve profile image for a membership
      description: Provides profile image of Vitality member based on membership number
      operationId: memberProfileImage
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Vitality membership number or member id (vitality active cases)
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberProfileImageResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Memberships
      summary: Sends a request to update membership profile image
      description: Enable a member to update profile image
      operationId: memberProfileImageUpdate
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Vitality membership number or member id (vitality active cases)
          required: true
          type: string
        - in: query
          name: profile-image
          description: Profile JPEG image with base-64 encoding
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/memberships/{membership-no}/opt-out-search':
    get:
      tags:
        - Memberships
      summary: Retrieve opt out search option for a membership
      description: Provides opt out search option of Vitality member based on membership number
      operationId: memberOptOutSearch
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Vitality membership number or member id (vitality active cases)
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberOptOutSeacrhResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Memberships
      summary: Sends a request to update membership opt out search option
      description: Enable a member to update opt out search option based on membership number
      operationId: memberOptOutSearchUpdate
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: membership-no
          description: Vitality membership number or member id (vitality active cases)
          required: true
          type: string
        - in: query
          name: opt-out-search
          description: Is opt out search option of the member
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /notifications:
    get:
      tags:
        - Notifications
      summary: Retrieves notification for a member .
      description: >-
        Provides a list of notifications received by the member based on
        membership number
      operationId: notificationMangement
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationManagementResponse'
          headers:
            X-Total-Count:
              type: string
              description: Total number of records in the unpaginated set
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Notifications
      summary: Sends a device registration request for receiving push notification for a membership.
      description: >-
        Enables member to receive push notifications from Vitality
      operationId: notificationMangementPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: body
          name: body
          description: Device details of the user
          required: true
          schema:
            $ref: '#/definitions/NotificationManagementPostRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /partners:
    get:
      tags:
        - Partners
      summary: Retrieves all rewards and benefits partners for a business entity.
      description: >-
        Provides the listof all rewards and benefits partners available for all
        membership statuses
      operationId: partnerList
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartnerListResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/partners/{partner-id}':
    get:
      tags:
        - Partners
      summary: Retrieves details of rewards and benefits partner based on partner id.
      description: Provides partner and benefit details offered by the partner
      operationId: partnerDetails
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: partner-id
          description: Unique identifier of the partner.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartnerDetailsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/partners/{partner-id}/branch-details':
    get:
      tags:
        - Partners
      summary: Retrieves details of rewards and benefits partner based on partner id.
      description: Provides partner and benefit details offered by the partner
      operationId: partnerBranchDetails
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: partner-id
          description: Unique identifier of the partner.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartnerBranchDetailsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/partners/{partner-id}/eligibility':
    get:
      tags:
        - Partners
      summary: Retrieve partner benefits eligibility for a membership
      description: Enables member to check eligibility on benefits redemption based on membership number
      operationId: partnerEligibility
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: partner-id
          description: Unique identifier of the partner.
          required: true
          type: string
        - in: query
          name: membership-no
          description: Vitality membership number or member id (vitality active cases)
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartnerEligibilityResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/partners/{partner-id}/eligibility/token':
    get:
      tags:
        - Partners
      summary: Retrieve partner benefits assess token for a membership
      description: Enables member to retrieve eligibility token for benefits SSO redemption based on membership number
      operationId: partnerEligibilityToken
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: partner-id
          description: Unique identifier of the partner.
          required: true
          type: string
        - in: query
          name: membership-no
          description: Vitality membership number or member id (vitality active cases)
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartnerEligibilityTokenResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /points:
    get:
      tags:
        - Points
      summary: Retrieves members points details.
      description: >-
        Provides total points earned by member for vitality activities of
        current year, based on membership number
      operationId: pointsList
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PointsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /points/configuration:
    get:
      tags:
        - Points
      summary: Retrieves points configuration details for a business entity.
      description: >-
        Provides the points setup in relation to a Vitality activity, for a
        business entity.
      operationId: pointsConfiguration
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PointsConfigResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /points/history:
    get:
      tags:
        - Points
      summary: Retrieves members points history.
      description: >-
        Provides points history of a member for given year(s) in past, based on
        membership number
      operationId: pointsHistory
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: number-of-years
          description: Number of years in the past user wants to see the points detail
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PointsHistoryResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /points/history/lookup:
    get:
      tags:
        - Points
      summary: Retrieves members points history based on points event type
      description: >-
        Look up points history of a member for given year(s) in past, based on
        membership number and point history type
      operationId: pointsHistoryLookUp
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: number-of-years
          description: Number of years in the past user wants to see the points detail
          required: false
          type: string
        - in: query
          name: activity-id
          description: Unique identifier of the events.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PointsHistoryLookUpResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'        
  /points/summary:
    get:
      tags:
        - Points
      summary: Retrieves members points summary.
      description: >-
        Provides points summary of member for current year, based on membership
        number
      operationId: pointsSummary
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PointsSummaryResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /rewards:
    get:
      tags:
        - Rewards
      summary: Retrieves rewards allocated to a member.
      description: >-
        Enables members to retrieve details of all rewards allocated to them
        after completing Vitality activities
      operationId: memberRewards
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberRewardsResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  /rewards/configuration:
    get:
      tags:
        - Rewards
      summary: Retrieves rewards configuration details for a business entity.
      description: >-
        Provides reward configuration for a particular based on membership
        status
      operationId: rewardConfiguration
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: query
          name: status
          description: ' Vitality status of the member.'
          required: false
          type: string
          enum:
            - Bronze
            - Silver
            - Gold
            - Platinum
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RewardConfigurationResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/rewards/{reward-id}/coupons':
    get:
      tags:
        - Rewards
      summary: Retrieves coupon based rewards.
      description: Provides list of coupon codes issues to a member
      operationId: rewardsRedemptionGet
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: path
          name: reward-id
          description: Unique identifier of the reward.
          required: true
          type: string
        - in: query
          name: donate-option
          description: 'This attribute specifies whether the reward can be donated or not. '
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RewardsRedemptionResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
    post:
      tags:
        - Rewards
      summary: Sends a coupon request for a redeemed reward.
      description: Enables a member to obtain a coupon codes after a reward is redeemed
      operationId: rewardsRedemptionPost
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: reward-id
          description: Unique identifier of the reward.
          required: true
          type: string
        - in: body
          name: body
          description: Rewards redemption object to post the the data.
          required: true
          schema:
            $ref: '#/definitions/RewardsCouponRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/rewards/{reward-id}/coupons/{coupon-id}/tag':
    post:
      tags:
        - Rewards
      summary: Sends tag to a reward to mark as used.
      description: Enables members to tag a coupon based reward to used and not used status
      operationId: tagCoupon
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: path
          name: reward-id
          description: Identifier for reward offered by a partner.
          required: true
          type: string
        - in: path
          name: coupon-id
          description: Identifier of a coupon for a reward.
          required: true
          type: string
        - in: query
          name: tagged-status
          description: Coupon used status.
          required: true
          type: boolean
          enum:
            - used
            - unused
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/rewards/{reward-id}/statement':
    get:
      tags:
        - Rewards
      summary: Retrieve benefit statement for a memberhsip entity.
      description: Provide lsit of benefit statement of a member 
      operationId: rewardStatement
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - $ref: '#/parameters/MembershipNo'
        - in: path
          name: reward-id
          description: Identifier for reward offered by a partner.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RewardsStatementResponse'
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
  '/rewards/{reward-id}/redeem':
    post:
      tags:
        - Rewards
      summary: Sends rewards redemption request to select a partner.
      description: >-
        Enables members to select a rewards partner for a specific reward based
        on member id or membership number
      operationId: submitRewardsRedemption
      parameters:
        - $ref: '#/parameters/AIA-Access-Token'
        - $ref: '#/parameters/X-AIA-Request-Id'
        - $ref: '#/parameters/X-Vitality-Legal-Entity-Id'
        - in: path
          name: reward-id
          description: Unique identifier of the partner.
          required: true
          type: string
        - in: body
          name: body
          description: Rewards redemption object to post the the data.
          required: true
          schema:
            $ref: '#/definitions/RewardsRedemptionRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/HTTPError400'
        '401':
          $ref: '#/responses/HTTPError401'
        '405':
          $ref: '#/responses/HTTPError405'
        '406':
          $ref: '#/responses/HTTPError406'
        '500':
          $ref: '#/responses/HTTPError500'
definitions:
  ActivitiesRequest:
    type: object
    properties:
      eventId:
        type: string
        description: Unique identifier for event.
      eventName:
        type: string
        description: Specifies event name for which user has joined.
      eventType:
        type: string
        description: Types of events user can participate.
      eventDate:
        type: string
        format: YYYY-MM-DD
        description: Date on which event is planned to happen.
      distance:
        type: string
        description: Range of distance user has to register for the event.
      finishTime:
        type: string
        description: Time at which user has finished the event.
      raceBibNo:
        type: string
        description: Unique identifier no to identify race participant.
    required:
      - eventId
      - eventName
      - eventType
      - eventDate
      - finishTime
  AssessmentConfigResponse:
    type: object
    properties:
      assessmentConfiguration:
        type: array
        items:
          properties:
            assessmentId:
              type: string
              description: Assessment Id.
            assessmentType:
              type: string
              description: 'Type of the assessment i.e. Improve your health, Reduce stress.'
            assessmentDesc:
              type: string
              description: Assessment details.
            renewalDate:
              type: string
              format: YYYY-MM-DD
              description: Renewal date for assessment .
            attributes:
              type: array
              items:
                properties:
                  attributeId:
                    type: string
                    description: >-
                      The health attribute which is being affected for the goal
                      .
                  attributeType:
                    type: string
                    description: Attribute type e.g. MentalWellbeingStressor etc.
                  attributeValue:
                    type: integer
                    format: int64
                    description: The value of the attribute provided in the assessment.
                  assessmentSourceType:
                    type: string
                    description: >-
                      Whether the assessment is online(Untrusted) or done at
                      partner site(Trusted)
  AssessmentFeedbackResponse:
    type: object
    properties:
      actualAge:
        type: integer
        format: int64
        description: Actual age of the member
      vitalityAge:
        type: object
        properties:
          age:
            type: integer
            format: int64
            description: Actual age of the member
          ageBreakup:
            type: array
            items:
              properties:
                ageValue:
                  type: integer
                  format: int64
                  description: Years differnce due to assessment
                ageReason:
                  type: string
                  description: Reason for differnce due to assessment
            description: What is the difference between Vitality age and actual age.
      feedback:
        type: array
        items:
          properties:
            feedbackId:
              type: string
            feedbackDesc:
              type: string
      feedbackIndicator:
        type: array
        items:
          properties:
            feedbackId:
              type: string
            feedbackValue:
              type: string
            feedbackTarget:
              type: string
            feedbackUnitOfMeasure:
              type: string
            feedbackRangeIndicator:
              type: string
              enum:
                - 'true'
                - 'false'
      assessmentData:
        properties:
          assessmentId:
            type: integer
            format: int64
            description: Assessment Id.
          assessmentType:
            type: string
            description: Types of the assessment
          assessmentDesc:
            type: string
            description: Assessment description.
          completionDate:
            type: string
            format: YYYY-MM-DD
            description: Date for which assessment has been completed.
          attributes:
            type: array
            items:
              properties:
                attributeId:
                  type: string
                  description: Attribute id e.g. RiskSmokingTargetRelativeRisk .
                attributeType:
                  type: string
                  description: Types of attribue e.g. MentalWellbeingPshychological.
                attributeValue:
                  type: string
                  description: The attribute value which has been used in VHR or VHC
          assessmentDate:
            type: string
            format: YYYY-MM-DD
            description: Date on which assessment has been taken.
          assessmentSourceType:
            type: string
            description: >-
              Whether the assessment has been taken from trusted or untrusted
              site
          effectiveFromDate:
            type: string
            format: YYYY-MM-DD
            description: Starting date of assessment.
          effectiveToDate:
            type: string
            format: YYYY-MM-DD
            description: End date of assessment.
      riskFactor:
        type: string
        description: Specifies various risk factors for the member.
        enum:
          - Cholesterol
          - BMI
          - Physical_Activity
          - Diabetes
          - Fasting_Blood_Glucose
          - Blood_Pressure_Combined
  CommunityChallengesInviteRequest:
    type: object
    properties:
      friendId:
        type: string
        description: >-
          Friend Id of the friend member to whom member has invited for
          challenge
      membershipNo:
        type: string
        description: 'Vitality membership number, if available, of the friend.'
      challengeId:
        type: string
        description: Unique identifier of the challenge.
      challengeName:
        type: string
        description: Challenge Name.
      challengeType:
        type: string
        description: >-
          Different types of challenges available e.g. Run or walk 10 km , run
          or walk 5 km. , etc.
      challengeStatusFromDate:
        type: string
        format: YYYY-MM-DD
        description: 'Challenge status(selected , rejected , quit) from date value.'
    required:
      - friendId
      - challengeName
      - challengeStatusFromDate
  CommunityChallengesInviteResponse:
    type: object
    properties:
      communityChallengeInvite:
        type: array
        items:
          properties:
            challengeId:
              type: string
              description: Identifier of the goal
            challengeName:
              type: string
              description: Name of the goal/ challenge
            challengeType:
              type: string
              description: Types of challenges
              enum:
                - Community
            inviteId:
              type: string
              description: Types of challenges
  CommunityChallengesResponse:
    type: object
    properties:
      communityChallenges:
        type: array
        items:
          properties:
            challengeId:
              type: string
              description: Identifier of the goal
            challengeName:
              type: string
              description: Name of the goal/ challenge
            challengeType:
              type: string
              description: Types of challenges
              enum:
                - Community
  CommunityChallengesMemberResponse:
    type: object
    properties:
      memberChallenges:
        type: array
        items:
          properties:
            challengeId:
              type: string
              description: Identifier of the goal
            challengeName:
              type: string
              description: Name of the goal/ challenge
            challengeType:
              type: string
              description: Types of challenges
              enum:
                - Weekly
                - Group
                - Member Challenge
                - Community
            metric:
              type: string
              description: Unit of measurement
            riskCategory:
              type: string
              description: Assessment  categories e.g. improve your health.
            riskFactor:
              type: string
              enum:
                - Cholesterol
                - BMI
                - Physical_Activity
                - Diabetes
                - Fasting_Blood_Glucose
                - Blood_Pressure_Combined
            challengeEffectiveFrom:
              type: string
              format: YYYY-MM-DD
              description: Start date of the challenge to be accepted by the member
            challengeEffectiveTo:
              type: string
              format: YYYY-MM-DD
              description: End date of the challenge to be completed by the member
            eventId:
              type: string
            awardType:
              type: string
              description: Gives you points earned by the member.
            awardDesc:
              type: string
              description: Points earned by completing which assessment.
            challengeStatus:
              type: string
              description: Status in which current goal is
              enum:
                - Selected
                - Achieved
                - Completed
            challengeStatusFromDate:
              type: string
              format: YYYY-MM-DD
              description: start date for the challenge status
            challengeStatusToDate:
              type: string
              format: YYYY-MM-DD
              description: End date for the challenge status
            recommendation:
              type: object
              properties:
                feedback:
                  type: object
                  properties:
                    feedbackId:
                      type: string
                      description: The identifier of the feedback why the goal is assigned.
                    feedbackDesc:
                      type: string
                      description: Description of the feedback.
                recommendationReason:
                  type: string
                  description: Why the goal has been recommended for the member.
            progessDetails:
              type: object
              properties:
                challengeStartDate:
                  type: string
                  format: YYYY-MM-DD
                  description: >-
                    The date on which the member has actually started the
                    challenge.
                attributes:
                  type: array
                  items:
                    properties:
                      attributeId:
                        type: string
                        description: >-
                          The health attribute which is being affected for the
                          goal.
                      attributeType:
                        type: string
                      attributeValue:
                        type: integer
                        format: int64
                        description: The value of the attribute provided in the assessment.
                      assessmentDate:
                        type: string
                        format: YYYY-MM-DD
                        description: >-
                          The date on which the assessment has been taken by the
                          member.
                      assessmentSourceType:
                        type: string
                        description: >-
                          Whether the assessment is online(Untrusted) or done at
                          partner site(Trusted)
  DeviceDetailsResponse:
    type: object
    properties:
      deviceDetails:
        type: array
        items:
          properties:
            deviceName:
              type: string
              description: Device name what user has used for recording activity details
            deviceLinkedStatus:
              type: string
              description: Specifies whether the device is linked or not.
            deviceLinkedDate:
              type: string
              format: YYYY-MM-DD
              description: Date on which device has been linked.
            deviceLastSyncDateTime:
              type: string
              description: Date and time on which device has been last sync.
            captureDetails:
              type: array
              items:
                properties:
                  fitnessData:
                    type: object
                    properties:
                      date:
                        type: string
                        format: YYYY-MM-DD
                        description: Date on which activity has been done by the user.
                      recordedTime:
                        type: string
                        description: >-
                          Time recorded at which user has performed the
                          activity.
                      steps:
                        type: string
                        description: Describes how many steps user has walked out.
                      distance:
                        type: string
                        description: Distance covered by the user during activity.
                      heartRate:
                        type: string
                        description: Heart rate of the user recorded during activity.
                      speedData:
                        type: object
                        properties:
                          workoutType:
                            type: string
                            description: >-
                              Various types of the workout user can perform e.g.
                              cycling , walking etc.
                          workoutDesc:
                            type: string
                            description: Describes workout details.
                      caloriesBurnt:
                        type: string
                        description: How much calories burnt durring the activity.
                      weight:
                        type: string
                        description: weight of the user.
                  nutrition:
                    type: string
                    description: Nutrition details of the user.
                  sleep:
                    type: object
                    properties:
                      date:
                        type: string
                        format: YYYY-MM-DD
                        description: Date recorded to capture sleep data.
                      hoursSlept:
                        type: string
                        description: How many hours user has slept.
  DeviceLinkResponse:
    type: object
    properties:
      deviceName:
        type: string
        description: Device name used for tracking by the user.
      linkURL:
        type: string
        description: Link URL for the device.
  DeviceDelinkResponse:
    type: object
    properties:
      deviceName:
        type: string
        description: Device name used for tracking by the user.
      delinkURL:
        type: string
        description: Delink URL for the device.
  DevicesListResponse:
    type: object
    properties:
      devices:
        type: array
        items:
          properties:
            deviceName:
              type: string
              description: Device name used for tracking by the user.
            trackingDetails:
              type: object
              properties:
                linkedStatus:
                  type: string
                  description: device link status for a member.
                deviceLastSyncDateTime:
                  type: string
                  description: Date and time on which device has been last sync.
                attributeType:
                  type: string
                  description: Various types of attributes available for the device.
                  enum:
                    - Heart Rate
                    - Speed
                    - Calories
                    - Steps
                attributeDesc:
                  type: string
                  description: Description for the attributes available.
  Exception:
    type: object
    properties:
      message:
        type: string
      reasonCode:
        type: string
      reason:
        type: string
  FitnessAssessmentRequest:
    type: object
    properties:
      medicalNoExerciseDoctor:
        type: string
        description: Do not exercise
        enum:
          - 'Yes'
          - 'No'
      medicalNoExerciseCondition:
        type: string
        description: No medical conditions
        enum:
          - 'Yes'
          - 'No'
      physicalActivityExerciseDaysPerWeek:
        type: string
        description: Activity days per week
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
      physicalActivityExerciseIntensity:
        type: string
        description: Exercise intensity
        enum:
          - Low
          - Moderate
          - High
          - Vigorous
      physicalActivityExerciseMinutesPerSession:
        type: string
        description: Exercise session time
      lifestyleSedentaryMinutesTelevision:
        type: string
        description: Television time
      physicalActivityCardioExerciseFrequency:
        type: string
        description: Cardio frequency
        enum:
          - Rarely or never
          - 1 or 2 times per week
          - 3 to 5 times per week
          - 6 to 7 times per week
      physicalActivityStrengthExerciseFrequency:
        type: string
        description: Strength exercise frequency
        enum:
          - Rarely or never
          - 1 or 2 times per week
          - 3 to 5 times per week
          - 6 to 7 times per week
      physicalActivityFlexibilityExerciseFrequency:
        type: string
        description: Flex exercise frequency
        enum:
          - Rarely or never
          - 1 or 2 times per week
          - 3 to 5 times per week
          - 6 to 7 times per week
      physicalActivityReasonBeingActiveHealth:
        type: string
        description: Active health goals
        enum:
          - 'Yes'
          - 'No'
      physicalActivityReasonBeingActiveLook:
        type: string
        description: Active look goals
        enum:
          - 'Yes'
          - 'No'
      physicalActivityReasonBeingActiveStress:
        type: string
        description: Active stress goals
        enum:
          - 'Yes'
          - 'No'
      physicalActivityReasonBeingActiveSocial:
        type: string
        description: Active social goals
        enum:
          - 'Yes'
          - 'No'
      physicalActivityReasonBeingActiveNone:
        type: string
        description: No active goals
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeAerobics:
        type: string
        description: Aerobics
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeJogging:
        type: string
        description: Jogging
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeSwimmingWater:
        type: string
        description: Swimming
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeWeightTraining:
        type: string
        description: Weight training
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeCycling:
        type: string
        description: Cycling
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeSkating:
        type: string
        description: Skating
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeRunningWalking:
        type: string
        description: Running
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeBallRacquetSports:
        type: string
        description: Racquet sports
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeYoga:
        type: string
        description: Yoga
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypePilates:
        type: string
        description: Pilates
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeMartialArts:
        type: string
        description: Martial arts
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeHomeExercises:
        type: string
        description: Home exercise
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeDancingGymnastics:
        type: string
        description: Gymnastics
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeFitnessClasses:
        type: string
        description: Fitness class
        enum:
          - 'Yes'
          - 'No'
      physicalActivityTypeOther:
        type: string
        description: Other active exercises
        enum:
          - 'Yes'
          - 'No'
      physicalActivityExerciseCompany:
        type: string
        description: Company during exercise
        enum:
          - Alone
          - WithPartner
          - FewPeople
          - Group
      physicalActivityExerciseLocation:
        type: string
        description: Exercise location
        enum:
          - Home
          - ClubCommunityCentre
          - Outdoors
      physicalActivityExerciseTracking:
        type: string
        description: Exercise tracking
        enum:
          - Fitbit
          - Garmin
          - Polar
          - Miband
          - Misfit
          - Jawbone
          - OtherFitnessDevice
          - Mobile
          - OtherMethod
          - DoNotTrack
  FriendFinderResponse:
    type: object
    properties:
      vitalityMembers:
        type: array
        items:
          properties:
            friendId:
              type: integer
              format: int64
              description: User Id of the  searched member within the group
            membershipNo:
              type: string
              description: Vitality membership No of the user.
            membershipStatus:
              type: string
              description: Vitality membership status
              enum:
                - Bronze
                - Silver
                - Gold
                - Platinum
            firstName:
              type: string
              description: First name of the searched member in the group.
            lastName:
              type: string
              description: Last name of the searched member in the group.
            fullName:
              type: string
              description: Last name of the searched member in the group.
            email:
              type: string
              description: Email of the searched member in the group.
            profileImage:
              type: string
              description: Image url of the searched member in the group.
            pointsSummary:
              type: object
              properties:
                pointsThisWeek:
                  type: integer
                  format: int64
                  description: Points achieved this week.
                pointsThisMonth:
                  type: integer
                  format: int64
                  description: Points achieved this month.
                totalPoints:
                  type: integer
                  format: int64
                  description: Total points earned by the user.
                pointsWeeklyChallenges:
                  type: string
                  description: This is the current points achieved
                pointsToWeeklyChallenges:
                  type: integer
                  format: int64
                  description: This is the total target for weekly challenges
                pointsToChallenges:
                  type: integer
                  format: int64
                  description: These are goals point.
                pointsToNextStatus:
                  type: integer
                  format: int64
                  description: Points to achieve next status
            friendStatus:
              type: integer
              format: int64
              description: Gives you status of the searched member in the group. .
              enum:
                - 0("not-friend")
                - 1("pending")
                - 2("friend")
                - 3("waiting")
  FriendDetailsResponse:
    type: object
    properties:
      friends:
        properties:
          friendId:
            type: integer
            format: int64
            description: User Id of the  searched member within the group
          membershipNo:
            type: string
            description: Vitality membership No of the user.
          membershipStatus:
            type: string
            description: Vitality membership status
            enum:
              - Bronze
              - Silver
              - Gold
              - Platinum
          firstName:
            type: string
            description: First name of the searched member in the group.
          lastName:
            type: string
            description: Last name of the searched member in the group.
          fullName:
            type: string
            description: Full name of the searched member in the group.
          email:
            type: string
            description: Email of the searched member in the group.
          profileImage:
            type: string
            description: Image url of the searched member in the group.
          pointsSummary:
            type: object
            properties:
              pointsThisWeek:
                type: integer
                format: int64
                description: Points achieved this week.
              pointsThisMonth:
                type: integer
                format: int64
                description: Points achieved this month.
              totalPoints:
                type: integer
                format: int64
                description: Total points earned by the user.
              pointsWeeklyChallenges:
                type: string
                description: This is the current points achieved
              pointsToWeeklyChallenges:
                type: integer
                format: int64
                description: This is the total target for weekly challenges
              pointsToChallenges:
                type: integer
                format: int64
                description: These are goals point.
              pointsToNextStatus:
                type: integer
                format: int64
                description: Points to achieve next status
  FriendsListResponse:
    type: object
    properties:
      friends:
        type: array
        items:
          properties:
            friendId:
              type: integer
              format: int64
              description: User Id of the  searched member within the group
            membershipNo:
              type: string
              description: Vitality membership No of the user.
            membershipStatus:
              type: string
              description: Vitality membership status
              enum:
                - Bronze
                - Silver
                - Gold
                - Platinum
            firstName:
              type: string
              description: First name of the searched member in the group.
            lastName:
              type: string
              description: Last name of the searched member in the group.
            fullName:
              type: string
              description: Full name of the searched member in the group.
            email:
              type: string
              description: Email of the searched member in the group.
            profileImage:
              type: string
              description: Image url of the searched member in the group.
            pointsSummary:
              type: object
              properties:
                pointsThisWeek:
                  type: integer
                  format: int64
                  description: Points achieved this week.
                pointsThisMonth:
                  type: integer
                  format: int64
                  description: Points achieved this month.
                totalPoints:
                  type: integer
                  format: int64
                  description: Total points earned by the user.
                pointsWeeklyChallenges:
                  type: string
                  description: This is the current points achieved
                pointsToWeeklyChallenges:
                  type: integer
                  format: int64
                  description: This is the total target for weekly challenges
                pointsToChallenges:
                  type: integer
                  format: int64
                  description: These are goals point.
                pointsToNextStatus:
                  type: integer
                  format: int64
                  description: Points to achieve next status
  GroupEditRequest:
    type: object
    properties:
      group-name-new:
        description: New group name for the friends
        type: string
      friends:
        type: array
        items:
          properties:
            friend-id:
              description: User Id of friend
              type: string
            action:
              description: action to be performed on user id
              type: string
      membership-no:
        description: Vitality membership number (Mandatory for full Vitality members)
        type: string
      member-id:
        description: Member id for non membership accounts
        type: string
  GroupListResponse:
    type: object
    properties:
      group:
        type: object
        properties:
          groupId:
            type: string
            description: Unique identifier of the group where user is a part of.
          groupName:
            type: string
            description: Group name where user is a part of.
          groupStatus:
            type: string
            description: Status of the group i.e. how much  has the group achieved .
          groupImage:
            type: string
            description: Image of the group where user is a part of.
          groupPointsTarget:
            type: string
            description: .
          groupPointsAchieved:
            type: string
            description: Provides how much points group has achieved.
          groupParticipantsAllowed:
            type: string
            description: Max members in group.
          members:
            type: array
            items:
              properties:
                friendId:
                  type: string
                  description: Unique identifier of the friend in the group..
                membershipNo:
                  type: string
                  description: Membership no of the user.
                membershipStatus:
                  type: string
                  description: Vitality membership status
                  enum:
                    - Bronze
                    - Silver
                    - Gold
                    - Platinum
                firstName:
                  type: string
                  description: First name of the member in the group.
                lastName:
                  type: string
                  description: Last name of the member in the group.
                fullName:
                  type: string
                  description: Full name of the member in the group.
                email:
                  type: string
                  description: Email of the  member in the group.
                profileImage:
                  type: string
                  description: Image url of the member in the group.
                pointsSummary:
                  type: object
                  properties:
                    pointsThisWeek:
                      type: integer
                      format: int64
                      description: Points achieved this week.
                    pointsThisMonth:
                      type: integer
                      format: int64
                      description: Points achieved this month.
                    totalPoints:
                      type: integer
                      format: int64
                      description: Total points earned by the user.
                    pointsWeeklyChallenges:
                      type: string
                      description: This is the current points achieved
                    pointsToWeeklyChallenges:
                      type: integer
                      format: int64
                      description: This is the total target for weekly challenges
                    pointsToChallenges:
                      type: integer
                      format: int64
                      description: These are goals point.
                    pointsToNextStatus:
                      type: integer
                      format: int64
                      description: Points to achieve next status
                participantStatus:
                  type: string
                groupRole:
                  type: string
                  description: >-
                    Defines if a user can delete the member from group. Eg:-
                    Where role is owner, member cannot delete self but delete
                    group instead.
  PendingGroupResponse:
    type: object
    properties:
      groupRequest:
        type: array
        items:
          properties:
            requestStatus:
              type: string
              description: Describes request status.
            friendGroupId:
              type: integer
              format: int64
              description: User Id of the group requester.
            friendGroupName:
              type: string
              description: Group name of group requester.
            profileImage:
              type: string
              description: Image url of the group requester.
  MentalAssessmentRequest:
    type: object
    properties:
      mentalHealthPsychHappinessInPastMonth:
        type: string
        description: Mental Happiness
        enum:
          - VeryHappy
          - MostlyHappy
          - NeitherHappyNorUnhappy
          - MostlyUnhappy
          - VeryUnhappy
      stressKesslerStressDepressed:
        type: string
        description: Stress depressed
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressEffort:
        type: string
        description: Stress effort
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressHopeless:
        type: string
        description: Stress hopeless
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressNervous:
        type: string
        description: Stress nervous
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressRestless:
        type: string
        description: Stress restless
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressSad:
        type: string
        description: Stress sad
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressTired:
        type: string
        description: Stress tired
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressVeryNervous:
        type: string
        description: Stress very nervous
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressVeryRestless:
        type: string
        description: Stress very restless
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      stressKesslerStressWorthless:
        type: string
        description: Stress worthless
        enum:
          - AllOfTheTime
          - MostOfTheTime
          - SomeOfTheTime
          - LittleOfTheTime
          - NoneOfTheTime
      lifestyleSleepHoursPerDay:
        type: string
        description: Sleeping hours per day
      lifestyleSleeplessnessInLastFourWeeks:
        type: string
        description: Sleeplessness in last month
        enum:
          - Never
          - Rarely
          - Occasionally
          - Frequently
          - Always
      mentalHealthStressAtWork:
        type: string
        description: Stress at work
        enum:
          - HardlyAnyProblemsOrConcerns
          - SmallProblemsOrConcernsNotSerious
          - ModeratelySeriousProblemsOrConcerns
          - SeriousProblemsOrConcerns
          - ExtremelySeriousProblemsOrConcerns
      mentalHealthStressWithinFamilyRelationship:
        type: string
        description: Stress due to  realtions
        enum:
          - ExtremelySeriousProblemsOrConcerns
          - SeriousProblemsOrConcerns
          - ModeratelySeriousProblemsOrConcerns
          - SmallProblemsOrConcernsNotSerious
          - HardlyAnyProblemsOrConcerns
      mentalHealthStressFamilyMemberDiedMe:
        type: string
        description: Stress due to family loss
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressFamilyMemberDiedOther:
        type: string
        description: Stress due to family loss others
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressCloseFriendDiedMe:
        type: string
        description: Stress due to friends loss
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressCloseFriendDiedOther:
        type: string
        description: Stress due to friends loss others
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressSeriousCarAccidentMe:
        type: string
        description: Stress due to car accident
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressSeriousCarAccidentOther:
        type: string
        description: Stress due to car accident others
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressLifeThreateningDisasterMe:
        type: string
        description: Stress due to life threaning disaster
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressLifeThreateningDisasterOther:
        type: string
        description: Stress due to life threaning disaster others
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressViolentCrimeVictimMe:
        type: string
        description: Stress due to violent crime
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressViolentCrimeVictimOther:
        type: string
        description: Stress due to violent crime others
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressOtherSeriousEventMe:
        type: string
        description: Stress due to serious event
        enum:
          - 'Yes'
          - 'No'
      mentalHealthStressOtherSeriousEventOther:
        type: string
        description: Stress due to serious event others
        enum:
          - 'Yes'
          - 'No'
      mentalHealthSupportFamilyGivesEmotionalSupport:
        type: string
        description: Family support
        enum:
          - StronglyDisagree
          - Disagree
          - Neutral
          - Agree
          - StronglyAgree
      mentalHealthSupportCanCountOnFriends:
        type: string
        description: Friends support
        enum:
          - StronglyDisagree
          - Disagree
          - Neutral
          - Agree
          - StronglyAgree
      mentalHealthSupportSpecialPersonInNeed:
        type: string
        description: Support for person in ndeed
        enum:
          - StronglyDisagree
          - Disagree
          - Neutral
          - Agree
          - StronglyAgree
      mentalHealthStressStatus:
        type: string
        description: Health stress status
        enum:
          - Coping
          - NeedImprovementButNotChanging
          - WantToImproveNeedHelp
  MemberAssessmentResponse:
    type: object
    properties:
      assessments:
        type: array
        items:
          properties:
            assessmentId:
              type: integer
              format: int64
              description: Assessment Id.
            assessmentType:
              type: string
              description: >-
                Types of the assessment e.g. Improve your health, Reduce stress
                etc.
            assessmentDesc:
              type: string
              description: Assessment description.
            completionDate:
              type: string
              format: YYYY-MM-DD
              description: Date for which assessment has been completed.
            attributes:
              type: array
              items:
                properties:
                  attributeId:
                    type: string
                    description: Attribute id e.g. RiskSmokingTargetRelativeRisk .
                  attributeType:
                    type: string
                    description: Types of attribue e.g. MentalWellbeingPshychological.
                  attributeValue:
                    type: string
                    description: The attribute value which has been used in VHR or VHC
                  assessmentDate:
                    type: string
                    format: YYYY-MM-DD
                    description: Date on which assessment has been taken.
                  assessmentSourceType:
                    type: string
                    description: >-
                      Whether the assessment has been taken from trusted or
                      untrusted site
            effectiveFromDate:
              type: string
              format: YYYY-MM-DD
              description: Starting date of assessment.
            effectiveToDate:
              type: string
              format: YYYY-MM-DD
              description: End date of assessment.
  MemberChallengeResponse:
    type: object
    properties:
      memberChallenges:
        type: array
        items:
          properties:
            challengeId:
              type: string
              description: Identifier of the goal
            challengeName:
              type: string
              description: Name of the goal/ challenge
            challengeType:
              type: string
              description: Types of challenges
              enum:
                - Weekly
                - Group
                - Member Challenge
            metric:
              type: string
              description: Unit of measurement
            riskCategory:
              type: string
              description: Assessment  categories e.g. improve your health.
            riskFactor:
              type: string
              enum:
                - Cholesterol
                - BMI
                - Physical_Activity
                - Diabetes
                - Fasting_Blood_Glucose
                - Blood_Pressure_Combined
            challengeEffectiveFrom:
              type: string
              format: YYYY-MM-DD
              description: Start date of the challenge to be accepted by the member
            challengeEffectiveTo:
              type: string
              format: YYYY-MM-DD
              description: End date of the challenge to be completed by the member
            eventId:
              type: string
            awardType:
              type: string
              description: Gives you points earned by the member.
            awardDesc:
              type: string
              description: Points earned by completing which assessment.
            challengeStatus:
              type: string
              description: Status in which current goal is
              enum:
                - Selected
                - Achieved
                - Completed
            challengeStatusFromDate:
              type: string
              format: YYYY-MM-DD
              description: start date for the challenge status
            challengeStatusToDate:
              type: string
              format: YYYY-MM-DD
              description: End date for the challenge status
            recommendation:
              type: object
              properties:
                feedback:
                  type: object
                  properties:
                    feedbackId:
                      type: string
                      description: The identifier of the feedback why the goal is assigned.
                    feedbackDesc:
                      type: string
                      description: Description of the feedback.
                recommendationReason:
                  type: string
                  description: Why the goal has been recommended for the member.
            progessDetails:
              type: object
              properties:
                challengeStartDate:
                  type: string
                  format: YYYY-MM-DD
                  description: >-
                    The date on which the member has actually started the
                    challenge.
                attributes:
                  type: array
                  items:
                    properties:
                      attributeId:
                        type: string
                        description: >-
                          The health attribute which is being affected for the
                          goal.
                      attributeType:
                        type: string
                      attributeValue:
                        type: integer
                        format: int64
                        description: The value of the attribute provided in the assessment.
                      assessmentDate:
                        type: string
                        format: YYYY-MM-DD
                        description: >-
                          The date on which the assessment has been taken by the
                          member.
                      assessmentSourceType:
                        type: string
                        description: >-
                          Whether the assessment is online(Untrusted) or done at
                          partner site(Trusted)
  MemberBankListResponse:
    type: object
    properties:
      bankList:
        type: array
        items:
          properties:
            bankId:
              type: string
              description: Unique identifier of Bank.            .
            bankName:
              type: string
              description: Name of bank.
            branchCode:
              type: string
              description: Branch code of the bank.
            branchName:
              type: string
            overseasBank:
              type: string
              description: >-
                Only applicable to HK market as there are two categories of
                banks in HK , Internation and Overseas.
            swiftCode:
              type: string
              description: Swift code of the bank to identify particular bank worldwide.
  MemberFinancialsResponse:
    type: object
    properties:
      banks:
        type: array
        items:
          properties:
            bankId:
              type: string
              description: Unique identifier of Bank.            .
            bankName:
              type: string
              description: Bank name where user is having an account.
            branchCode:
              type: string
              description: Branch code of the bank where user is holding an account..
            branchName:
              type: string
              description: Branch name of the bank where user is holding an account.
            accountNumber:
              type: string
              description: Bank account number of the user.
            accountType:
              type: string
              description: Types of account.
              enum:
                - Saving Account
                - Current Account
            accountHolderName:
              type: string
              description: Holder name of the account.
            countryCode:
              type: string
              description: Country code of the bank where user is having an account.
            overseasBank:
              type: string
              description: >-
                Only applicable to HK market as there are two categories of
                banks in HK , Internation and Overseas.
            swiftCode:
              type: string
              description: Swift code of the bank to identify particular bank worldwide.
      payments:
        type: array
        items:
          properties:
            paymentDueDate:
              type: string
              format: YYYY-MM-DD
              description: Expiry date of the payment.
            paymentMethod:
              type: string
              description: Mode of payment e.g. Cashback  or Voucher
            paymentAmount:
              type: string
              description: Amount to be paid by the user.
            paymentDate:
              type: string
              format: YYYY-MM-DD
              description: Date on which payment has been done .
            paymentReference:
              type: string
              description: Unique reference Id of the payment.
  MemberFinancialsUpdateRequest:
    type: object
    properties:
      banks:
        type: object
        properties:
          bankId:
            type: string
            description: Unique identifier of Bank.            .
          bankName:
            type: string
            description: Bank name where user is having an account.
          branchCode:
            type: string
            description: Branch code of the bank where user is holding an account..
          branchName:
            type: string
            description: Branch name of the bank where user is holding an account.
          accountNumber:
            type: string
            description: Bank account number of the user.
          accountType:
            type: string
            description: Types of account.
            enum:
              - Saving Account
              - Current Account
          accountHolderName:
            type: string
            description: Holder name of the account.
          countryCode:
            type: string
            description: Country code of the bank where user is having an account.
          overseasBank:
            type: string
            description: >-
              Only applicable to HK market as there are two categories of
              banks in HK , Internation and Overseas.
          swiftCode:
            type: string
            description: Swift code of the bank to identify particular bank worldwide.
  MemberRewardsResponse:
    type: object
    properties:
      availableRewards:
        type: string
        description: Count of the rewards available to the  member
      rewardsCategory:
        type: array
        items:
          properties:
            categoryId:
              type: string
              description: The identifier of  the reward
            categoryType:
              type: string
            categoryDesc:
              type: string
              description: >-
                Desription of the reward avaialbe to the user e.g. how many
                vouchers the member is eligible for  etc.
            expiryDate:
              type: string
              format: YYYY-MM-DD
              description: The date on which the reward will be expired.
            rewardsStartDate:
              type: string
              format: YYYY-MM-DD
              description: Date on which reward has been allocated
            rewardsEndDate:
              type: string
              format: YYYY-MM-DD
            rewardsSelection:
              type: array
              items:
                properties:
                  rewardId:
                    type: string
                    description: Identifier used to identify reward
                  rewardType:
                    type: string
                    description: Various types of rewards available in the system
                    enum:
                      - Cashback
                      - '% discount'
                      - Voucher
                  rewardDesc:
                    type: string
                    description: Description of the reward
                  rewardValue:
                    type: string
                    description: 'Value of the reward. i.e. 5$ voucher,10% cashback etc.'
                  rewardMetric:
                    type: string
                    description: Unit used to specify reward value
                  skuNo:
                    type: string
                    description: >-
                      Stock keeping unit is used to identify the member purchased
                      items .
                  donateOption:
                    type: string
                    description: When a member donate the rewards to other member ( friend )
                  taggedStatus:
                    type: string
                    description: Redeemed status of the reward
                  rewardExpiryDate:
                    type: string
                    format: YYYY-MM-DD
                    description: The date on which the selected reward will expire
  MembersDemographicsResponse:
    type: object
    properties:
      memberDetails:
        type: object
        properties:
          title:
            type: string
            description: Salutation used for the member.
          firstName:
            type: string
            description: First Name of the member.
          lastName:
            type: string
            description: Last Name of the member.
          fullName:
            type: string
            description: Full Name of the member.
          initial:
            type: string
            description: Initial used for the member name.
          dateOfBirth:
            type: string
            format: YYYY-MM-DD
            description: Vitality member date of birth.
          gender:
            type: string
            description: Vitality member gender.
          docId:
            type: object
            properties:
              docIdType:
                type: string
                description: Types of document Identifier .
              docIdNo:
                type: string
                description: Document identifier Number.
      address:
        type: array
        items:
          properties:
            addressType:
              type: string
              description: Various types of member address details  .
              enum:
                - Home
                - Office
            addressLine1:
              type: string
              description: Member address line1 details .
            addressLine2:
              type: string
              description: Member address line2 details .
            addressLine3:
              type: string
              description: Member address line3 details.
            suburb:
              type: string
              description: Suburb of the member address.
            city:
              type: string
              description: City name of the member.
            code:
              type: string
              description: Pincode of the member address.
      email:
        type: array
        items:
          properties:
            emailType:
              type: string
              description: Types of member email
              enum:
                - General
                - Professional
            emailId:
              type: string
              description: Email Id of the member.
      telephone:
        type: array
        items:
          properties:
            telNoType:
              type: string
              description: Types of telephone no a member is having e.g. mobile
            telDialCode:
              type: string
              description: Telephone dial code of the member .
            telNo:
              type: string
              description: Telephone no. of the member .
  MemberDemographicsUpdateRequest:
    type: object
    properties:
      address:
        type: array
        items:
          properties:
            addressType:
              type: string
              description: Various types of member address details  .
              enum:
                - Home
                - Office
            addressLine1:
              type: string
              description: Member address line1 details .
            addressLine2:
              type: string
              description: Member address line2 details .
            addressLine3:
              type: string
              description: Member address line3 details.
            suburb:
              type: string
              description: Suburb of the member address.
            city:
              type: string
              description: City name of the member.
            code:
              type: string
              description: Pincode of the member address.
      email:
        type: array
        items:
          properties:
            emailType:
              type: string
              description: Types of member email
              enum:
                - General
                - Professional
            emailId:
              type: string
              description: Email Id of the member.
      telephone:
        type: array
        items:
          properties:
            telNoType:
              type: string
              description: Types of telephone no a member is having e.g. mobile
            telDialCode:
              type: string
              description: Telephone dial code of the member .
            telNo:
              type: string
              description: Telephone no. of the member .
  MemberProfileImageResponse:
    type: object
    properties:
      memberProfileImage:
        type: object
        properties:
          profileImage:
            type: string
            description: Image url of the member. 
  MemberOptOutSeacrhResponse:
    type: object
    properties:
      memberOptOutSeacrh:
        type: object
        properties:
          isOptOutSearch:
            type: string
            description: Is opt out seacrh of the member.  
  MembershipDetailsResponse:
    type: object
    properties:
      membership:
        type: object
        properties:
          vitalityMembershipNo:
            type: string
            description: User vitality membership-number
          membershipType:
            type: string
            description: Membership type e.g. NRI.
          region:
            type: string
            description: Country Name
          currentVitalityStatus:
            type: string
            description: Vitality status of the member in the current policy year.
            enum:
              - Gold
              - Silver
              - Bronze
              - Platinum
          vitalityStatusChangeDate:
            type: string
            format: YYYY-MM-DD
            description: The date on which vitality status has been changed.
          nextVitalityStatus:
            type: string
            description: Status for the next vitality
          benefitStatus:
            type: string
            description: Benefit status of the member
          benefitExpiryDate:
            type: string
            format: YYYY-MM-DD
            description: Benefits expiry date
          membershipStartDate:
            type: string
            format: YYYY-MM-DD
            description: Membership start date
          membershipEndDate:
            type: string
            format: YYYY-MM-DD
            description: Membership end date
          membershipStatus:
            type: string
            description: 'Vitality membership status e.g. Active , Inactive etc.'
          eCardNo:
            type: string
            description: Vitality card number of the member.
      members:
        type: object
        properties:
          principleMember:
            type: object
            properties:
              firstName:
                type: string
                description: First name of the pending friend.
              lastName:
                type: string
                description: Last name of the pending friend.
              fullName:
                type: string
                description: Full Name of the  vitality member
              memberRole:
                type: array
                items:
                  properties:
                    type:
                      type: string
                      description: Roles of the member
                      enum:
                        - PP - Principal Party
                        - VPH - Vitality Policy Holder
                        - IPV - Insured Party - Vitality
                    status:
                      type: string
                      description: vitality status of the member
                    roleStartDate:
                      type: string
                      format: YYYY-MM-DD
                      description: Date on which member has been enrolled.
          familyMembers:
            type: string
            description: Family member details  of the member.
  NotificationManagementResponse:
    type: object
    properties:
      notifications:
        type: array
        items:
          properties:
            notificationId:
              type: string
              description: Unique identifier of the notification.
            notificationType:
              type: string
              description: .
            notificationDesc:
              type: string
              description: Describes notification details.
            notificationDate:
              type: string
              format: YYYY-MM-DD
              description: Date on which notificatfication has been recieved by the user
            notificationImage:
              type: string
              description: Image for notification.
            message:
              type: string
              description: Message recieved by the user.
            readStatus:
              type: string
              description: >-
                Describes read status for the notification whether it is read or
                not.
            actionURL:
              type: string
              description: URL for the notification .
  NotificationManagementPostRequest:
    type: object
    properties:
      deviceDetails:
        type: object
        properties:
          appId:
            type: string
            description: Describes which Vitality app the member is using.
          deviceId:
            type: string
            description: Unique identifier of mobile device member is using for Vitality.
          pushToken:
            type: string
            description: Push notification token of device member is using for Vitality.
          language:
            type: string
            description: Locale of language member is using for Vitality.
  NutritionAssessmentRequest:
    type: object
    properties:
      nutritionFruitAndVegetablePerDay:
        type: string
        description: Fruits and vegetables intake per day
      nutritionServingsDailyWholegrain:
        type: string
        description: Wholegrain intake per day
      nutritionAddSaltBeforeTasting:
        type: string
        description: Salt intake
        enum:
          - Pinch
          - HalfTeaspoon
          - LevelTeaspoon
          - HeapedTeaspoon
          - LevelDessertSpoon
          - HeapedDessertSpoon
      nutritionSaltyFoodConsumption:
        type: string
        description: Salty food intake
        enum:
          - Never
          - Rarely
          - Occasionally
          - Usually
          - Frequently
          - Always
      nutritionIntakeDairyConsumptionLowFatOrFatFree:
        type: string
        description: Low fat or fat free dairy intake
        enum:
          - Never
          - Rarely
          - Occasionally
          - Usually
          - Frequently
          - Always
          - DoNotConsumeDairy
      nutritionIntakeFrequencyAddFatAfterCooking:
        type: string
        description: Fat addition to cooked food
        enum:
          - Never
          - Rarely
          - Occasionally
          - Usually
          - Frequently
          - Always
      nutritionServingsDailyFattyFoods:
        type: string
        description: Fatty food servings
      nutritionIntakeMeatConsumptionLean:
        type: string
        description: Lean meat intake
        enum:
          - Never
          - Rarely
          - Occasionally
          - Usually
          - Frequently
          - Always
          - DoNotEatMeat
      nutritionServingsDailySugarSweetenedCupsOfTeaOrCoffee:
        type: string
        description: Sugar intake per drink
      nutritionServingsDailyDrinksSugary:
        type: string
        description: Sugary drinks intake
      nutritionEatBreakfast:
        type: string
        description: Breakfast intake
        enum:
          - Never
          - Rarely
          - Occasionally
          - Usually
          - Frequently
      nutritionEatLunch:
        type: string
        description: Lunch intake
        enum:
          - Never
          - Rarely
          - Occasionally
          - Usually
          - Frequently
      nutritionEatDinner:
        type: string
        description: Dinner intake
        enum:
          - Never
          - Rarely
          - Occasionally
          - Usually
          - Frequently
      nutritionEatSnacks:
        type: string
        description: Snack intake per day
        enum:
          - 'Yes'
          - 'No'
      nutritionWhenSnacking:
        type: string
        description: Snacking time
        enum:
          - Morning
          - Afternoon
          - Night
      nutritionEatJunkFood:
        type: string
        description: Junk food intake
        enum:
          - 'Yes'
          - 'No'
      nutritionFruitIntake:
        type: string
        description: Fruit intake
      nutritionVegetableIntake:
        type: string
        description: Vegetable intake
      nutritionDairyServingsPerDay:
        type: string
        description: Dairy intake
      nutritionHighFatMeatChoice:
        type: string
        description: Fatty meat intake
        enum:
          - UsuallyOften
          - Sometimes
          - RarelyNever
          - NotApplicable
      nutritionEatSaltyFood:
        type: string
        description: Salty food intake
        enum:
          - UsuallyOften
          - Sometimes
          - RarelyNever
          - NotApplicable
      nutritionFattyFishMoreThan2PerWeek:
        type: string
        description: Fish intake
        enum:
          - UsuallyOften
          - Sometimes
          - RarelyNever
          - NotApplicable
      nutritionAddButter:
        type: string
        description: Butter intake
        enum:
          - UsuallyOften
          - Sometimes
          - RarelyNever
          - NotApplicable
      nutritionAddGoodOil:
        type: string
        description: Oil intake
        enum:
          - UsuallyOften
          - Sometimes
          - RarelyNever
          - NotApplicable
      nutritionRegularDressing:
        type: string
        description: Dressing intake
        enum:
          - UsuallyOften
          - Sometimes
          - RarelyNever
          - NotApplicable
      nutritionAddSalt:
        type: string
        description: Salt addition
        enum:
          - UsuallyOften
          - Sometimes
          - RarelyNever
          - NotApplicable
      nutritionEatSweetFoods:
        type: string
        description: Sweets intake
        enum:
          - UsuallyOften
          - Sometimes
          - RarelyNever
          - NotApplicable
      nutritionEatingHabitPerception:
        type: string
        description: Perception of eating habit
        enum:
          - Happy
          - NeedImprovementButNotChanging
          - NeedsImprovementNeedHelp
  PartnerDetailsResponse:
    type: object
    properties:
      partnerId:
        type: string
        description: The unique identification of partner.
      partnerDesc:
        type: string
        description: Name of partner.
      partnerType:
        type: string
        description: Retrieves various types of partners.
        enum:
          - cashback
          - voucher
          - discount
      partnerBenefits:
        type: array
        items:
          properties:
            benefitId:
              type: string
              description: Identifier of the the benefit.
            benefitType:
              type: string
              description: 'Type of benefit e.g. USAGE,SPEND.'
            benefitDesc:
              type: string
              description: Detailed desciption of the benefit .
            benefitComponent:
              type: array
              items:
                properties:
                  benefitofferName:
                    type: string
                    description: The offer given the the user for the sepecific benefit.
                  benefitComponentId:
                    type: string
                    description: >-
                      The component id of the benefit. It is configured in the
                      system.
                  benefitComponentType:
                    type: string
                    description: Type of benefit component.
                  benefitComponentDesc:
                    type: string
                    description: Detailed description of the benefit component.
                  benefitComponentValue:
                    type: string
                    description: Value of the offer given to the member.
                  benefitStartDate:
                    type: string
                    format: YYYY-MM-DD
                    description: Date from which User can utilize the benefit provided .
                  benefitEndDate:
                    type: string
                    format: YYYY-MM-DD
                    description: Date upto which User can utilize the benefit provided .
            partnerBranchId:
              type: string
              description: The branch of the partner where the benefits can be used.
      partnerRewards:
        type: array
        items:
          properties:
            benefitComponentId:
              type: string
              description: >-
                Unique component Id associated with each rewards , this one is
                configured in core engine .
            rewardId:
              type: string
              description: >-
                Unique identification used for each rewards , this one is
                configured in L&R system.
            rewardType:
              type: string
              description: Various type  of rewards available e.g. benefits.
            rewardDesc:
              type: string
              description: Description of reward.
            rewardMetric:
              type: string
              description: Unit of measurement for reward.
            rewardCurrency:
              type: string
              description: 'Currency used for rewards  e.g. INR , Dollar.'
  PartnerListResponse:
    type: object
    properties:
      partnerList:
        type: array
        items:
          properties:
            partnerId:
              type: string
              description: The unique identification of partner.
            partnerDesc:
              type: string
              description: Name of partner.
            partnerType:
              type: string
              description: Retrieves various types of partners.
              enum:
                - cashback
                - voucher
                - discount
            partnerRewardId:
              type: string
              description: This attribute provides partner reward Id.
  PartnerBranchDetailsResponse:
    type: object
    properties:
      partnerBranchList:
        type: array
        items:
          properties:
            partnerBranchId:
              type: string
              description: The unique identification of partner branch.
            partnerBranchName:
              type: string
              description: Name of partner branch.
  PartnerEligibilityResponse:
    type: object
    properties:
      partnerRewards:
        type: array
        items:
          properties:
            offerDetails:
              type: object
              properties:
                rewardsId:
                  type: string
                  description: Id of the partner benefit offer.
                limit:
                  type: object
                  properties:
                    limitAmt:
                      type: string
                      description: Limit amount of the partner benefit offer.
                    limitType:
                      type: string
                      description: Type of the offer limit.
                rewardIndicator:
                  type: string
                  description: Reward calculation indicator.
                startDate:
                  type: string
                  description: Start date of partner benefit eligibility.
                endDate:
                  type: string
                  description: End date of partner benefit eligibility.
            eligibility:
              type: object
              properties:
                status:
                  type: string
                  description: Status of partner benefit eligiblity.
            rewardDesc:
              type: object
              properties:
                rewardValue:
                  type: string
                  description: Discount value of the partner benefit offer.
                rewardMetric:
                  type: string
                  description: Type of discount offer
  PartnerEligibilityTokenResponse:
    type: object
    properties:
      token:
        type: string
        description:  One time token for partner benefits redemption.
  PendingFriendsResponse:
    type: object
    properties:
      pendingFriends:
        type: array
        items:
          properties:
            requestStatus:
              type: string
              description: Describes request status.
              enum:
                - sent
                - recieved
            friendId:
              type: integer
              format: int64
              description: User id of the pending friend .
            membeshipNo:
              type: string
              description: Vitality membership No of the user.
            membershipStatus:
              type: string
              description: 'Membership status of the user e.g. active , inactice etc.'
            firstName:
              type: string
              description: First name of the pending friend.
            lastName:
              type: string
              description: Last name of the pending friend.
            fullName:
              type: string
              description: Full name of the pending friend.
            email:
              type: string
              description: Email id  of the pending friend.
            profileImage:
              type: string
              description: Image url of the pending friend.
  PointsConfigResponse:
    type: object
    properties:
      pointsConfiguration:
        type: array
        items:
          properties:
            category:
              type: string
              description: Assessment category.
            riskCategory:
              type: array
              items:
                properties:
                  activityId:
                    type: string
                    description: Assessment or challenge or other activity Id.
                  activityType:
                    type: string
                    description: >-
                      Assessment or challenge or other activity for which point
                      has been awarded for the usere.g. VHR ,MWB etc.
                  activityDesc:
                    type: string
                    description: Assessment or challenge or other activity description.
                  activitytPoints:
                    type: string
                    description: >-
                      Points earned by the member after completing the
                      particular Assessment or challenge or other activity.
            categoryCap:
              type: string
              description: Maximum points of that particular assessment category.
  PointsHistoryResponse:
    type: object
    properties:
      pointsTotal:
        type: string
        description: Total points earned by the member .
      pointsPerDay:
        type: array
        items:
          properties:
            awardedDate:
              type: string
              format: YYYY-MM-DD
              description: Date on which member has been awarded with point.
            points:
              type: integer
              format: int64
              description: Numerical value of the points earned by the member.
            assessmentType:
              type: string
              description: >-
                Type of the assessment i.e. Improve your health, Reduce stress ,
                MWB etc.
            assessmentDesc:
              type: string
              description: Assessment Description..
            challengeId:
              type: string
              description: Identifier of the goal.
            challengeType:
              type: string
              description: Types of challenges
              enum:
                - Weekly
                - Group
                - Member Challenge
            activityId:
              type: string
              description: Identifier of the activity.
            activityType:
              type: string
              description: Types of other activity.
            riskCategory:
              type: string
              description: >-
                Assessment  categories e.g. reduce stress , improve your health
                etc.
            feedback:
              type: object
              properties:
                feedbackId:
                  type: string
                  description: The identifier of the feedback why the goal is assigned.
                feedbackDesc:
                  type: string
                  description: Description of the feedback.
  PointsHistoryLookUpResponse:
    type: object
    properties:
      pointsTotal:
        type: string
        description: Total points earned by the member .
      pointsPerDay:
        type: array
        items:
          properties:
            awardedDate:
              type: string
              format: YYYY-MM-DD
              description: Date on which member has been awarded with point.
            points:
              type: integer
              format: int64
              description: Numerical value of the points earned by the member.
            feedbackId:
              type: string
              description: The identifier of the feedback why the goal is assigned.
            feedbackDesc:
                type: string
                description: Description of the feedback.
  PointsResponse:
    type: object
    properties:
      pointsTotal:
        type: integer
        format: int64
        description: Total points for this policy year.
      pointsPerDay:
        type: array
        items:
          description: Date wise points of the member.
          properties:
            awardedDate:
              type: string
              format: YYYY-MM-DD
              description: Date on which member has been awarded with points.
            points:
              type: integer
              format: int64
              description: Points allocated to the member.
            assessmentType:
              type: string
              description: >-
                Assessments for which point has been awarded for the user e.g.
                mental wellbeing etc.
            assessmentDesc:
              type: string
              description: Assessment description.
            challengeId:
              type: string
              description: Identifier of the goal.
            challengeType:
              type: string
              description: Types of challenges
              enum:
                - Weekly
                - Group
                - Member Challenge
            activityId:
              type: string
              description: Identifier of the activity.
            activityType:
              type: string
              description: Types of other activity.
            riskCategory:
              type: string
              description: Category of the risk eg. improve your health.
            feedback:
              type: object
              properties:
                feedbackId:
                  type: string
                  description: Field displaying whether points has been rejected or awarded
                feedbackDesc:
                  type: string
                  description: Reason for rejection or acceptance of points
  PointsSummaryResponse:
    type: object
    properties:
      pointsThisWeek:
        type: integer
        format: int64
        description: Points achieved this week.
      pointsThisMonth:
        type: integer
        format: int64
        description: Points achieved this month.
      totalPoints:
        type: integer
        format: int64
        description: Total points earned by the user.
      pointsWeeklyChallenges:
        type: string
        description: This is the current points achieved
      pointsToWeeklyChallenges:
        type: integer
        format: int64
        description: Weekly challenge points.
      pointsToChallenges:
        type: integer
        format: int64
        description: TThese are goals point.
      pointsToNextStatus:
        type: integer
        format: int64
        description: Points to achieve next status
  RewardsCouponRequest:
    type: object
    properties:
      category-id:
        description: 'Unique category id e.g. voucher , cashback etc.'
        type: string
      coupon-id:
        description: Identifier of a coupon for a reward.
        type: string
      partnerId:
        description: Unique partner id.
        type: string
      membership-no:
        description: Vitality membership number (Mandatory for full Vitality members)
        type: string
      member-id:
        description: Member id for non membership accounts
        type: string
  RewardConfigurationResponse:
    type: object
    properties:
      rewardConfiguration:
        type: array
        items:
          properties:
            rewardId:
              type: string
              description: Identifier used to identify reward
            rewardType:
              type: string
              description: Various types of rewards available in the system
              enum:
                - Cashback
                - '% discount'
                - Voucher
            rewardDesc:
              type: string
              description: Description of the reward
            rewardValue:
              type: string
              description: 'Value of the reward. i.e. 5$ voucher,10% cashback etc.'
            rewardMetric:
              type: string
              description: Unit used to specify reward value
            donateOption:
              type: string
              description: When a member donate the rewards to other member ( friend )
            rewardExpiryDate:
              type: string
              format: YYYY-MM-DD
              description: The date on which the selected reward will expire
  RewardsRedemptionRequest:
    type: object
    properties:
      donateOption:
        type: string
        description: Flag to indicate member donating the rewards to charity.
      category-id:
        description: 'Unique category id e.g. voucher , cashback etc.'
        type: string
      partnerId:
        description: Unique partner id.
        type: string
      membership-no:
        description: Vitality membership number (Mandatory for full Vitality members)
        type: string
      member-id:
        description: Member id for non membership accounts
        type: string
  RewardsRedemptionResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          properties:
            rewardId:
              type: string
              description: Identifier used to identify reward
            couponId:
              type: string
              description: Identifier used to identify coupon
            rewardType:
              type: string
              description: Various types of rewards available in the system
              enum:
                - Cashback
                - '% discount'
                - Voucher
            rewardDesc:
              type: string
              description: Description of the reward
            rewardValue:
              type: string
              description: 'Value of the reward. i.e. 5$ voucher,10% cashback etc.'
            rewardMetric:
              type: string
              description: Unit used to specify reward value
            skuNo:
              type: string
              description: >-
                Stock keeping unit is used to identify the member purchased
                items .
            donateOption:
              type: string
              description: When a member donate the rewards to other member ( friend )
            taggedStatus:
              type: string
              description: Redeemed status of the reward.
            rewardIssueDate:
              type: string
              format: YYYY-MM-DD
              description: The date on which the reward has been issued.
            rewardExpiryDate:
              type: string
              format: YYYY-MM-DD
              description: The date on which the selected reward will expire.
            rewardState:
              type: string
              description: Status of the rewards if it has been used or not.
            balance:
              type: string
              description: Remaining value of the reward of a particluar partner type  .
            balanceDate:
              type: string
              format: YYYY-MM-DD
              description: Expiry Date of the balance of the reward.
            redeemCodeType:
              type: string
              description: Redeemption Type e.g.QR code barcode etc .
            redeemCode:
              type: string
              description: >-
                The code generated by the system using which the member can
                redeem the reward.
            redirectUrl:
              type: string
              description: Redirect URL to third party application for using a specific coupon (e.g. Grab)
  RewardsStatementResponse:
    type: object
    properties:
      rewardsStatement:
        type: array
        items:
          properties:
            value:
              type: string
              description: Value of reward
            issueDate:
              type: string
              format: YYYY-MM-DD
              description: The date on which the reward is issued to the member.
            redemption:
              type: string
              format: YYYY-MM-DD
              description: The date on which the reward is transfered to partner by the member. 
            paymentExpiryDate:
              type: string
              format: YYYY-MM-DD
              description: The date on which the reward is used with partner by the member.       
  ScreeningAssessmentRequest:
    type: object
    properties:
      appointmentDate:
        type: string
        description: Date on which assessment has been appointed.
      assessmentDetails:
        type: object
        properties:
          assessmentId:
            type: string
            description: Identifier of the assessment.
          assessmentType:
            type: string
            description: >-
              Type of the assessment i.e. Improve your health, Reduce stress
              etc.
          partnerBranchId:
            type: string
            description: The branch of the partner where the benefits can be used.
          attributes:
            type: array
            items:
              properties:
                attributeId:
                  type: string
                  description: The health attribute which is being affected for the goal
                attributeType:
                  type: string
                attributeValue:
                  type: string
                  description: The value of the attribute provided in the assessment.
                assessmentDate:
                  type: string
                  format: YYYY-MM-DD
                  description: >-
                    The date on which the assessment has been taken by the
                    member
                assessmentSourceType:
                  type: string
                  description: >-
                    Whether the assessment is online(Untrusted) or done at
                    partner site(Trusted).
          assessmentReports:
            type: object
            properties:
              assessmentReportFormat:
                type: string
                description: 'Various types of format a report can be e.g. pdf , txt etc.'
              assessmentReport:
                type: string
                description: Assessment report of the member.
      membershipNo:
        type: string
        description: Vitality membership number of the user.
  DeclarationRequest:
    type: object
    properties:
      appointmentDate:
        type: string
        description: Date on which assessment has been appointed.
      assessmentDetails:
        type: object
        properties:
          assessmentId:
            type: string
            description: Identifier of the assessment.
          assessmentType:
            type: string
            description: >-
              Type of the assessment i.e. Improve your health, Reduce stress
              etc.
      membershipNo:
        type: string
        description: Vitality membership number of the user.
  LinkGarminTokenRequest:
    type: object
    properties:
      refreshToken:
        type: string
        description: Garmin refresh token of a specific member.
      token:
        type: string
        description: Garmin linking token of a specific member.
      userId:
        type: string
        description: Garmin userId of a specific member.
  VitalityThresholdResponse:
    type: object
    properties:
      thresholds:
        type: array
        items:
          properties:
            order:
              type: string
              description: Order of the status in the response.
              enum:
                - 0 - 9999
                - 10000 - 19999
                - 20000 - 29999
                - 30000 - 39999
            status:
              type: string
              description: Vitality status of the user
            upperLimit:
              type: integer
              format: int64
              description: Maximum points to cross next status
            lowerLimit:
              type: integer
              format: int64
              description: Minimum points to reach next status
  VHRGeneralAssessmentRequest:
    type: object
    properties:
      lifestyleHealthAssessment:
        type: string
        description: General health status
        enum:
          - Excellent
          - VeryGood
          - Good
          - Fair
          - Poor
      lifestyleImproveExercise:
        type: string
        description: Excercise indicator
        enum:
          - 'Yes'
          - 'No'
      lifestyleImproveEating:
        type: string
        description: Eating indicator
        enum:
          - 'Yes'
          - 'No'
      lifestyleImproveSleep:
        type: string
        description: Sleeping indicator
        enum:
          - 'Yes'
          - 'No'
      lifestyleImproveStress:
        type: string
        description: Stress indicator
        enum:
          - 'Yes'
          - 'No'
      lifestyleImproveFamily:
        type: string
        description: Family indicator
        enum:
          - 'Yes'
          - 'No'
      lifestyleImproveFinance:
        type: string
        description: Finance indicator
        enum:
          - 'Yes'
          - 'No'
      lifestyleImproveWorkLifeBalance:
        type: string
        description: WorkLifeBalance indicator
        enum:
          - 'Yes'
          - 'No'
      medicalHeightValue:
        type: string
        description: Height value
      medicalHeightMetric:
        type: string
        description: Measurement
        enum:
          - FeetInches
          - Meters
          - Inches
          - Centimeters
      medicalWeightValue:
        type: string
        description: Weight value
      medicalWeightMetric:
        type: string
        description: Measurement
        enum:
          - Pounds
          - Kilograms
          - StonePounds
          - PoundOunces
      medicalWaistCircumferenceValue:
        type: string
        description: Waist value
      medicalWaistCircumferenceMetric:
        type: string
        description: Measurement
        enum:
          - Inches
          - Centimeters
      medicalWeightPerception:
        type: string
        description: Weight perception
        enum:
          - Happy
          - NoIntention
          - WantToLoseWeight
      medicalBloodPressureRange:
        type: string
        description: Blood Pressure range
        enum:
          - High
          - Normal
          - Low
          - DontKnow
      medicalSystolic:
        type: string
        description: Systolic value
      medicalDiastolic:
        type: string
        description: Diastolic value
      medicalFastingGlucoseRange:
        type: string
        description: Glucose range
        enum:
          - High
          - Normal
          - Low
          - DontKnow
      medicalFastingGlucoseValue:
        type: string
        description: Glucose value
      medicalFastingGlucoseMetric:
        type: string
        description: Glucose metric
        enum:
          - mmolL
          - mgDL
      medicalRandomGlucoseRange:
        type: string
        description: Glucose range
        enum:
          - High
          - Normal
          - Low
          - DontKnow
      medicalRandomGlucoseValue:
        type: string
        description: Glucose value
      medicalRandomGlucoseMetric:
        type: string
        description: Glucose metric
        enum:
          - mmolL
          - mgDL
      medicalCholesterolRange:
        type: string
        description: Cholesterol range
        enum:
          - High
          - Normal
          - Low
          - DontKnow
      medicalTotalCholesterolValue:
        type: string
        description: Cholesterol value
      medicalTotalCholesterolMetric:
        type: string
        description: Cholesterol metric
        enum:
          - mmolL
          - mgDL
      lifestyleSmokingStatus:
        type: string
        description: Smoking status
        enum:
          - NonSmoker
          - ExSmoker
          - Smoker
      lifestyleExSmokingConsumptionCigarettes:
        type: string
        description: Smoking Consumption
      medicalSmokingStoppedPeriodInMonths:
        type: string
        description: ExSmoker period
      lifestyleSmokingConsumptionCigarettes:
        type: string
        description: Smoking consumption
      medicalSmokingPeriodInMonths:
        type: string
        description: Smoking timeline
      lifestyleSmokingECigarettes:
        type: string
        description: eSmoking indicator
        enum:
          - 'Yes'
          - 'No'
      lifestyleAlcoholDrinker:
        type: string
        description: Alcohol drinking indicator
        enum:
          - 'Yes'
          - 'No'
      lifestyleAlcoholConsumptionFrequencyPerDay:
        type: string
        description: Alcohol intake count  per day
      lifestyleAlcoholConsumptionFrequencyPerWeek:
        type: string
        description: Alcohol intake count per week
      medicalHeartDisease:
        type: string
        description: Heart disease indicator
        enum:
          - 'Yes'
          - 'No'
      medicalStroke:
        type: string
        description: Stroke indicator
        enum:
          - 'Yes'
          - 'No'
      medicalHypertension:
        type: string
        description: Blood pressure indicator
        enum:
          - 'Yes'
          - 'No'
      medicalCholesterolHigh:
        type: string
        description: Cholesterol indicator
        enum:
          - 'Yes'
          - 'No'
      medicalDiabetes:
        type: string
        description: Diabetes indicator
        enum:
          - 'Yes'
          - 'No'
      medicalCancer:
        type: string
        description: Cancer indicator
        enum:
          - 'Yes'
          - 'No'
      mentalHealthDepression:
        type: string
        description: Depression indicator
        enum:
          - 'Yes'
          - 'No'
      medicalBoneDensityConditionOsteoporosis:
        type: string
        description: Osteoporosis indicator
        enum:
          - 'Yes'
          - 'No'
      medicalAsthma:
        type: string
        description: Asthma indicator
        enum:
          - 'Yes'
          - 'No'
      medicalChronicLungDisease:
        type: string
        description: LungDisease indicator
        enum:
          - 'Yes'
          - 'No'
      medicalArthritis:
        type: string
        description: Arthritis indicator
        enum:
          - 'Yes'
          - 'No'
      medicalHistoryAllergies:
        type: string
        description: Allergies indicator
        enum:
          - 'Yes'
          - 'No'
      medicalHistoryBackPain:
        type: string
        description: Back pain indicator
        enum:
          - 'Yes'
          - 'No'
      medicalHistoryChronicPain:
        type: string
        description: Pain indicator
        enum:
          - 'Yes'
          - 'No'
      medicalHistoryHeartBurnReflux:
        type: string
        description: Heart burn indicator
        enum:
          - 'Yes'
          - 'No'
      medicalMenopause:
        type: string
        description: Menopause indicator
      medicalMigraine:
        type: string
        description: Migraine indicator
        enum:
          - 'Yes'
          - 'No'
      medicalSleepDisorder:
        type: string
        description: Sleep indicator
        enum:
          - 'Yes'
          - 'No'
      medicalOtherConditionsDuplicate:
        type: string
        description: Duplicate indicator
        enum:
          - 'Yes'
          - 'No'
      medicalHistoryThyroid:
        type: string
        description: Thyroid indicator
        enum:
          - 'Yes'
          - 'No'
      medicalPregnant:
        type: string
        description: Pregnancy indicator
        enum:
          - 'Yes'
          - 'No'
      medicalFamilyHeartDisease:
        type: string
        description: Family heart disease indicator
        enum:
          - 'Yes'
          - 'No'
      MedicalFamilyStroke:
        type: string
        description: Family stroke indicator
        enum:
          - 'Yes'
          - 'No'
      medicalFamilyHypertension:
        type: string
        description: Family blood pressure indicator
        enum:
          - 'Yes'
          - 'No'
      medicalFamilyCholesterol:
        type: string
        description: Family cholesterol indicator
        enum:
          - 'Yes'
          - 'No'
      medicalFamilyDiabetes:
        type: string
        description: Family diabetes indicator
        enum:
          - 'Yes'
          - 'No'
      medicalFamilyCancer:
        type: string
        description: Family cancer indicator
        enum:
          - 'Yes'
          - 'No'
      medicalFamilyOsteoporosis:
        type: string
        description: Family osteoporosis indicator
        enum:
          - 'Yes'
          - 'No'
      medicalFamilyAsthma:
        type: string
        description: Family asthma indicator
        enum:
          - 'Yes'
          - 'No'
      medicalFamilyChronicLungDisease:
        type: string
        description: Family lungDisease indicator
        enum:
          - 'Yes'
          - 'No'
  WorkoutTrackerResponse:
    type: object
    properties:
      workouts:
        type: array
        items:
          properties:
            workoutId:
              type: string
              description: The unique identification number of the workout.
            startDate:
              type: string
              format: YYYY- MM-DD
              description: Start date of the workout/activity.
            endDate:
              type: string
              format: YYYY- MM-DD
              description: Date on which the workout/activity is ending..
            workoutType:
              type: string
              description: 'Type of workout done e.g. Walking,Runnning,etc.'
            description:
              type: string
              description: Detailed description of the workout.
            integrity:
              type: string
              description: >-
                Provides information whether the activity is TRUSTED or
                UNTRUSTED.
            category:
              type: string
              description: .
            intensity:
              type: string
              description: >-
                The intensity of the workout completed by  member e.g.
                Hard,Easy.
            measure:
              type: array
              items:
                properties:
                  type:
                    type: string
                    description: Type of the workout done .
                  value:
                    type: string
                    description: Actual value of the workout done e.g. 5 km walking.
                  attributeBreakup:
                    type: object
                    properties:
                      key:
                        type: string
                        description: 'Attributes name such as pace,heartRate,etc.'
                      value:
                        type: string
                        description: Value of the attribute.
                      unit:
                        type: string
                        description: >-
                          Unit of the value e.g. for heartbeats unit will be
                          bpm.
            uploadDetails:
              type: array
              items:
                properties:
                  uploadDate:
                    type: string
                    format: YYYY-MM-DD
                    description: >-
                      Date on which the data is uploaded from the device by
                      member.
                  system:
                    type: string
                    description: Device by which the data is uploaded in the system  .
                  manufacturer:
                    type: string
                    description: Manufacturer of the device.
  SubmitHealthDataRequest:
    type: object
    properties:
      header:
        type: object
        properties:
            uploadDateTime:
              type: string
              format: "2018-08-30T10:53:14"
              description: Date and time which the reading is submitting.
            partnerSystem:
              type: string
              description: partner system which the member is using for data tracking.
            processingType:
              type: string
              description: Procrssing type of reading e.g.Realtime.
            rawUploadData:
              type: string
              description: Raw upload data.
            verified:
              type: string
              description: Whether the data is being verified.
            additionalMessage:
              type: string
              description: Detailed description of the reading.
            sessionId:
              type: string
              description: Unique identifier of the reading.
      device:
        type: object
        properties:
            deviceId:
              type: string
              description: Unique identifier of device member is using for tracking health data.
            make:
              type: string
              description: The source of data, which is the device.
            manufacturer:
              type: string
              description: The source of data, which is the device.
            model:
              type: string
              description: The device model used to record data.
      readings:
        type: array
        items:
          properties:
            dataCategory:
              type: string
              description: Specifies the category which the record belongs to i.e. Routine, Biometric or Fitness
            startTime:
              type: string
              format: "2018-08-30T10:53:14"
              description: Time when data was recorded.
            endTime:
              type: string
              format: "2018-08-30T10:53:14"
              description: Time when data record ended.
            integrity:
              type: string
              description: Identifies the validity of the workout whether it is verified, unverified or unknown.
            manufacturer:
              type: string
              description: The source of data, which is the device.
            model:
              type: string
              description: The device model used to record data.
            notes:
              type: string
              description: Description of the reading
            partnerCreateDate:
              type: string
              format: "2018-08-30T10:53:14"
              description: Time when partner is linked for submitting readings.
            partnerReadingId:
              type: string
              description: Identifier for data received from a device partner.
            readingType:
              type: string
              description: Type of reading.
            workout:
              type: object
              properties: 
                distance:
                  type: object
                  properties:
                    unitOfMeasurement:
                      type: string
                      description: Unit of reading.
                    value:
                      type: string
                      description: Value of reading.
                intensity:
                  type: string
                  description: The rate at which the activity is being performed.
                totalSteps:
                  type: string
                  description: Number of steps taken during the workout session.
                energyExpenditure:
                  type: object
                  properties:
                    unitOfMeasurement:
                      type: string
                      description: Unit of reading.
                    value:
                      type: string
                      description: Value of reading.
                heartRate:
                  type: object
                  properties:
                    avgMinMax:
                      type: object
                      properties:
                        average:
                          type: string
                          description: Average heart rate
                        maxium:
                          type: string
                          description: Maxium heart rate
                        minium:
                          type: string
                          description: Minium heart rate